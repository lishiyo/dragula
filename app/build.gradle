apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.lishiyo.kotlin.sandbox"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Specifies a flavor dimension.
    flavorDimensions "buildtype"
    productFlavors {
        development {
            dimension "buildtype"
            minSdkVersion 21
            //only package english translations
            resConfigs ("en")
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    if (project.hasProperty('devBuild')){
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnabled = false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // ui
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile "android.arch.lifecycle:extensions:${rootProject.ext.archLifecycleVersion}"
    compile "android.arch.persistence.room:runtime:${rootProject.ext.archRoomVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${rootProject.ext.archLifecycleVersion}"
    annotationProcessor "android.arch.persistence.room:compiler:${rootProject.ext.archRoomVersion}"

    // retrofit + gson
    compile "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitVersion}"

    // TODO switch to jackson-module-kotlin
    compile "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"

    // rxjava + rxbinding
    compile "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxJavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"
    String rxBindingVersion = '2.0.0'
    compile "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBindingVersion"

    // butterknife
    String butterKnifeVersion = '8.6.0'
    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    // == FRESCO ==
    compile "com.facebook.fresco:fresco:${rootProject.ext.frescoVersion}"
    // For animated GIF support
    compile "com.facebook.fresco:animated-gif:${rootProject.ext.frescoVersion}"
    // For WebP support, including animated WebP
    compile "com.facebook.fresco:animated-webp:${rootProject.ext.frescoVersion}"
    compile "com.facebook.fresco:webpsupport:${rootProject.ext.frescoVersion}"

    // Dagger 2
    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger-android:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger-android-support:${rootProject.ext.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.daggerVersion}"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // Firebase
    compile "com.google.firebase:firebase-database:${rootProject.ext.firebaseVersion}"

    // Litho
//    compile "com.facebook.litho:litho-core:${rootProject.ext.lithoVersion}"
//    compile "com.facebook.litho:litho-widget:${rootProject.ext.lithoVersion}"
//    provided "com.facebook.litho:litho-annotations:${rootProject.ext.lithoVersion}"
//    annotationProcessor "com.facebook.litho:litho-processor:${rootProject.ext.lithoVersion}"
//    // SoLoader
//    compile 'com.facebook.soloader:soloader:0.2.0'
    // Optional - For debugging
//    debugCompile "com.facebook.litho:litho-stetho:${rootProject.ext.lithoVersion}"
    // For integration with Fresco
//    compile "com.facebook.litho:litho-fresco:${rootProject.ext.lithoVersion}"
    // For testing
//    testCompile "com.facebook.litho:litho-testing:${rootProject.ext.lithoVersion}"

    // test dependencies
    testCompile 'junit:junit:4.12'
    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
}

apply plugin: 'com.google.gms.google-services'